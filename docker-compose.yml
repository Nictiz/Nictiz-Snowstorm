# Nictiz <info@snomed.nl>, adapted from https://github.com/IHTSDO/snowstorm/ by SNOMED International <tooling@snomed.org>
version: '2.1'
services:
  # Using the published docker image for elasticsearch 6.5.4, as this is the latest supported version for snowstorm.
  # Update the version number according to changes on the IHTSDO snowstorm GitHub https://github.com/IHTSDO/snowstorm/blob/master/docs/getting-started.md
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.5.4
    container_name: elasticsearch
    environment:
      - "ES_JAVA_OPTS=-Xms4g -Xmx4g"
      - bootstrap.memory_lock=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - elastic_data:/usr/share/elasticsearch/data
    networks:
      elastic:
        aliases:
         - es
    healthcheck:
      test: ["CMD", "curl", "-f", "http://es:9200"]
      interval: 10s
      timeout: 2s
      retries: 280
    ports:
      - 9200:9200
    mem_reservation: 4g


  snowstorm:
    # Building a new local image from the latest version on https://github.com/IHTSDO/snowstorm/
    # Specify the latest version number in ./snowstorm/Dockerfile-snowstorm in line: ARG SNOWSTORM_VERSION=x.x.x
    image: nictiz/snowstorm:latest
    build: 
      context: ./snowstorm
      dockerfile: Dockerfile-snowstorm
    container_name: snowstorm
    depends_on:
      elasticsearch:
        condition: service_healthy
    # Read only database:
    #   >> --snowstorm.rest-api.readonly=true
    # Write allowed: (required for creating the database indices)
    #   >> --snowstorm.rest-api.readonly=false
    # Remove --spring.autoconfigure.exclude=org.springframework.cloud.aws.autoconfigure.context.ContextStac when deploying on AWS
    entrypoint: java -Xms2g -Xmx4g -jar snowstorm.jar --elasticsearch.urls=http://es:9200 --snowstorm.rest-api.readonly=false --spring.autoconfigure.exclude=org.springframework.cloud.aws.autoconfigure.context.ContextStackAutoConfiguration
    networks:
      elastic:
        aliases:
          - snow
    healthcheck:
      test: ["CMD", "wget", "-S", "snow:8080/swagger-ui.html"]
      interval: 1s
      timeout: 1s
      retries: 100
    ports:
      - 8080:8080

networks:
  elastic:

volumes:
  elastic_data:
