# Nictiz <info@snomed.nl>, adapted from https://github.com/IHTSDO/snowstorm/ by SNOMED International <tooling@snomed.org>
version: '2.1'
services:
  # Using the published docker image for elasticsearch 7.7.0, as this is the latest supported version for snowstorm.
  # Update the version number according to changes on the IHTSDO snowstorm GitHub https://github.com/IHTSDO/snowstorm/blob/master/docs/getting-started.md
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.7.0
    container_name: elasticsearch
    environment:
      - node.name=snowstorm
      - cluster.name=snowstorm-cluster
      - cluster.initial_master_nodes=snowstorm
      - "ES_JAVA_OPTS=-Xms4g -Xmx4g"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - elastic_data:/usr/share/elasticsearch/data
    networks:
      snowstorm_network:
        aliases:
         - es
    healthcheck:
      test: ["CMD", "curl", "-f", "http://es:9200"]
      interval: 10s
      timeout: 2s
      retries: 280
    ports:
      - 9200:9200
    mem_reservation: 4g

  nginx:
    # image: nginx
    build:
      context: .
      dockerfile: Dockerfile
    expose:
      - 80
    networks:
      - snowstorm_network
      - proxy
    environment:
      - VIRTUAL_HOST=termservice.test-nictiz.nl
      - VIRTUAL_PORT=80

  snowstorm:
    image: snomedinternational/snowstorm:latest
    container_name: snowstorm
    depends_on:
      elasticsearch:
        condition: service_healthy
    # Read only database:
    #   >> --snowstorm.rest-api.readonly=true
    # Write allowed: (required for creating the database indices)
    #   >> --snowstorm.rest-api.readonly=false
    # Remove --spring.autoconfigure.exclude=org.springframework.cloud.aws.autoconfigure.context.ContextStac when deploying on AWS
    entrypoint: java -Xms2g -Xmx4g -jar snowstorm.jar
      --elasticsearch.urls=http://es:9200
      --snowstorm.rest-api.readonly=false
      --spring.autoconfigure.exclude=org.springframework.cloud.aws.autoconfigure.context.ContextStackAutoConfiguration 
      --spring.servlet.multipart.max-file-size=1000MB
      --spring.servlet.multipart.max-request-size=1000MB
    networks:
      snowstorm_network:
        aliases:
          - snow
    ports:
      - 8080:8080
    healthcheck:
      test: ["CMD", "wget", "-S", "http://snow:8080"]
      interval: 10s
      timeout: 10s
      retries: 280
networks:
  snowstorm_network:
    external: false
    name: snowstorm_network
volumes:
  elastic_data:
